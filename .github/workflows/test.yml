name: Test-Workflow

on:
  workflow_dispatch

jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      Greeting: Hello
      OSL: ubuntu-20-x86_64
      OSW: windows-32
    steps:
      - uses: actions/checkout@v3
      - name: make bfs binary
        run:  make bfs-bin
      - name: make me binary
        run: |
          sudo apt install build-essential mingw-w64 gcc-mingw-w64-i686 
          sudo apt install libz-mingw-w64 libz-mingw-w64-dev
          sudo apt install desktop-file-utils
          make me-bin
          make mingw-w32-compile
          make me-bfs-bin          
      - name: prepare folders with binaries
        run: |
          mkdir "$OSL"
          mkdir "$OSW"
          zip -r jasspa.zip jasspa/*
          cp jasspa.zip COPYING license.txt README-standalone.md  "$OSL/"
          cp jasspa.zip COPYING license.txt README-standalone.md  "$OSW/"
          cp bfs/bfs "$OSL/"
          cp src/.linux32gcc-release-mecw/mecw "$OSL/mecw-ubuntu-20"
          cp me-linux.bin "$OSL/mecw-ubuntu-20.bin"
          md5sum $OSL/mecw-ubuntu-20.bin > $OSL/mecw-ubuntu-20.md5
          cp bin/bfs.exe $OSW/bfs.exe
          md5sum $OSW/bfs.exe > $OSW/bfs.md5
          cp me-windows.exe $OSW/jme.exe
          md5sum $OSW/jme.exe > $OSW/jme.md5
          cp mec-windows.exe $OSW/jmc.exe
          md5sum $OSW/jmc.exe > $OSW/jmc.md5
          echo `ls`
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v3
        with: 
          name: ubuntu-20-x86_64
          path: ubuntu-20-x86_64
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v3
        with: 
          name: "$OSL"
          path: "$OSL"
