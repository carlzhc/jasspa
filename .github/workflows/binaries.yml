name: Binaries Linux and Windows

on:
  workflow_dispatch:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    steps:
    - uses: actions/checkout@v3
     
    - name: make bfs binary
      run:  make bfs-bin
      
    - name: make me binary
      run: |
        sudo apt install build-essential mingw-w64 gcc-mingw-w64-i686 
        sudo apt install libz-mingw-w64 libz-mingw-w64-dev
        sudo apt install desktop-file-utils
        make me-bin
        make mingw-w32-compile

    - name: make me-standalone binary
      run: make me-bfs-bin
    
    - name: Make me-standalone binary
      run: |
        mkdir binaries-Linux-x86_64
        mkdir binaries-Windows-32
        cp bfs/bfs binaries-Linux-x86_64/
        cp src/.linux32gcc-release-mecw/mecw binaries-Linux-x86_64/mew-ubuntu-20
        cp src/.linux32gcc-release-mec/mec  binaries-Linux-x86_64/mec-ubuntu-20
        cp mew-linux.bin binaries-Linux-x86_64/mew-bfs-ubuntu-20.bin
        cp mec-linux.bin binaries-Linux-x86_64/mec-bfs-ubuntu-20.bin
        cp license.txt binaries-Linux-x86_64/
        cp COPYING binaries-Linux-x86_64/
        cp README-standalone.md binaries-Linux-x86_64/
        cp mew-bfs-windows.exe binaries-Windows-32/
        cp mec-bfs-windows.exe binaries-Windows-32/
        cp src/.win32mingw-release-mew/mew32.exe binaries-Windows-32/mew-windows.exe
        cp src/.win32mingw-release-mec/mec32.exe binaries-Windows-32/mec-windows.exe
        cp bin/bfs.exe binaries-Windows-32/
        cp license.txt binaries-Windows-32/
        cp COPYING binaries-Windows-32/
        cp README-standalone.md binaries-Windows-32/
        cd jasspa 
        zip macros.zip macros/*
        cd ..
        cp jasspa/macros.zip binaries-Windows-32/
        cp jasspa/macros.zip binaries-Linux-x86_64/

    - name: Make appimage
      run: |
        wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage          
        chmod 755 appimagetool-x86_64.AppImage
        chmod 755 jme.AppDir/AppRun
        ./bin/bfs -a bin/mecw-ubuntu-18 -o jme.AppDir/usr/bin/jme ./jasspa
        ./appimagetool-x86_64.AppImage jme.AppDir
        
    - name: Upload Linux binaries
      uses: actions/upload-artifact@v3
      with: 
        name: binaries-Linux-x86_64
        path: binaries-Linux-x86_64
    - name: Upload Linux Appimgage
      uses: actions/upload-artifact@v3
      with: 
        name: Jasspa_MicroEmacs-x86_64.AppImage
        path: Jasspa_MicroEmacs-x86_64.AppImage
    - name: Upload Artifact GitHub Action Windows
      uses: actions/upload-artifact@v3
      with: 
        name: binaries-Windows-32
        path: binaries-Windows-32
    
