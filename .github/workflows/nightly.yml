name: Nightly

on:
  workflow_dispatch:
  schedule:
    - cron: '53 7 * * *'

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-20.04
    env:
      OSL: ubuntu-20-x86_64
      WSL: windows-32
    steps:
    - uses: actions/checkout@v3

    - name: make bfs binary
      run:  make bfs-bin
      
    - name: make me binary
      run: |
        sudo apt install build-essential mingw-w64 gcc-mingw-w64-i686 
        sudo apt install libz-mingw-w64 libz-mingw-w64-dev
        sudo apt install desktop-file-utils
        make me-bin
        make mingw-w32-compile

    - name: make me-standalone binary
      run: make me-bfs-bin
    
    - name: Make me-standalone binary
      run: |
        mkdir $OSL
        mkdir $OSW
        zip jasspa.zip jasspa/*
        
        cp jasspa.zip COPYING license.txt README-standalone.md  $OSL/
        cp jasspa.zip COPYING license.txt README-standalone.md  $OSW/
        cp bfs/bfs $OSL/
        cp src/.linux32gcc-release-mecw/mecw $OSW/mecw-ubuntu-20
        cp me-linux.bin $OSL/mecw-ubuntu-20.bin
        cp bin/bfs.exe $OSW/bfs.exe
        md5sum $OSW/bfs.exe > $OSW/bfs.md5
        cp me-windows.exe $OSW/jme.exe
        md5sum $OSW/jme.exe > $OSW/jme.md5
        cp mec-windows.exe $OSW/jmc.exe
        md5sum $OSW/jmc.exe > $OSW/jmc.md5
    - name: Make appimage
      run: |
        wget https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-x86_64.AppImage          
        chmod 755 appimagetool-x86_64.AppImage
        chmod 755 jme.AppDir/AppRun
        ./bin/bfs -a bin/mecw-ubuntu-18 -o jme.AppDir/usr/bin/jme ./jasspa
        ./appimagetool-x86_64.AppImage jme.AppDir
        md5sum Jasspa_MicroEmacs-x86_64.AppImage > Jasspa_MicroEmacs-x86_64.AppImage.md5
    - name: Upload Artifact GitHub Action
      uses: actions/upload-artifact@v3
      with: 
        name: binaries-Linux-x86_64
        path: binaries-Linux-x86_64
    - name: Upload Linux Appimgage
      uses: actions/upload-artifact@v3
      with: 
        name: Jasspa_MicroEmacs-x86_64.AppImage
        path: Jasspa_MicroEmacs-x86_64.AppImage Jasspa_MicroEmacs-x86_64.AppImage.md5
    - name: Upload Artifact GitHub Action Windows
      uses: actions/upload-artifact@v3
      with: 
        name: binaries-Windows-32.zip
        path: binaries-Windows-32.zip
    - name: Upload Artifact GitHub Action Windows md5
      uses: actions/upload-artifact@v3
      with: 
        name: binaries-Windows-32.md5
        path: binaries-Windows-32.md5
    - name: Upload Ubuntu files
      uses: actions/upload-artifact@v3
      with: 
        name: $(OSL)
        path: $(OSL)

  macos:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies on MacOS and compile and produce BFS exes and standalone ME application 
        if: runner.os == 'macOS'
        run: |
           echo `uname -a`
           ls
           brew install xquartz
           brew install gcc
           brew install make
           cd bfs && /usr/local/opt/make/libexec/gnubin/make CC=gcc-10
           cd ../src && /usr/local/opt/make/libexec/gnubin/make -f macos32gcc.gmk  CC=gcc-10
           cd ../src && /usr/local/opt/make/libexec/gnubin/make -f macos32gcc.gmk  CC=gcc-10 BTYP=c
           cd ..
           mkdir binaries-MacOS-11
           cp src/.macos32gcc-release-mecw/mecw binaries-MacOS-11/
           cp src/.macos32gcc-release-mec/mec binaries-MacOS-11/           
           tar cfvz jasspa.tar.gz jasspa/*
           cp jasspa.tar.gz binaries-MacOS-11/
           rm -rf jasspa/company
           rm -rf jasspa/pixmaps
           rm -rf jasspa/contrib           
           ./bfs/bfs -a src/.macos32gcc-release-mecw/mecw -o binaries-MacOS-11/mecw-macos.bin ./jasspa
           ./bfs/bfs -a src/.macos32gcc-release-mec/mec   -o binaries-MacOS-11/mec-macos.bin ./jasspa           
           cp bfs/bfs binaries-MacOS-11/
           chmod 755 binaries-MacOS-11/mec-macos.bin
           ./binaries-MacOS-11/mec-macos.bin  -n -V
           cp README-standalone.md binaries-MacOS-11/
           cp faq.txt license.txt binaries-MacOS-11/
           echo '-1 ml-write &cat "Platform:" $platform' > platform.emf
           echo "exit-emacs" >> platform.emf
           TERM=xterm-256color ./binaries-MacOS-11/mec-macos.bin @platform.emf
      - name: Upload Artifact GitHub Action
        uses: actions/upload-artifact@v3
        with: 
           name: binaries-MacOS-11
           path: binaries-MacOS-11
           
