;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Author        : Detlef Groth, University of Potsdam, Germany
;  Created By    : Detlef Groth
;  Created       : Wed Dec 4 17:39:58 2024
;  Last Modified : <241228.1002>
;
;  Description   : functions useful to be used for R development
;
;  Notes         : - r-format requires the R package formatR to be installed
;                  - r-lint   requires the R package lintr to be installed
;
;  History       : 2024-12-04 - first version
;
;  Copyright (c) 2024 Detlef Groth, University of Potsdam, Germany
;  License       : Same as MicroEmacs - GPL 2
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
define-macro r-format
  !if &bmod "edit"
    set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
    !if &iseq #l0 "y" 
      save-buffer 
    !endif
  !endif 
  !if &not &seq $buffer-fhook "fhook-r"
      ml-write &spr "Error: '%s' is not an R file!" $buffer-bname
      !abort
  !endif
  !if &seq %rscript-com "ERROR"
    r-rscript
  !endif
  set-variable #l0 &reg &spr "/history/%s/char-set" %platform ""
  set-variable #l0 &xre #l0 "iso" "ISO-" #l0
  set-variable #l0 &xre #l0 "cp" "CP" #l0    
  set-variable #l0 &xre #l0 "microsoft-" "" #l0        
  2 pipe-shell-command &spr "%s  -e \"options('encoding'='%s');formatR::tidy_file('%s')\"" %rscript-com #l0 $buffer-fname "*command*"
  !if &equ $result 1
    ml-write "Error: It seems that R or the R package formatR is not installed!"
  !else
    0 reread-file
  !endif
!emacro

define-macro r-lint
  !if &seq %rscript-com "ERROR"
    r-rscript
  !endif
  !if &not &seq $buffer-fhook "fhook-r"
    ml-write &spr "Error: '%s' is not an R file!" $buffer-bname
    !abort
  !endif
  set-variable #l0 &reg &spr "/history/%s/char-set" %platform ""
  set-variable #l0 &xre #l0 "iso" "ISO-" #l0
  set-variable #l0 &xre #l0 "cp" "CP" #l0    
  set-variable #l0 &xre #l0 "microsoft-" "" #l0        
  !force set-variable #l1 .lint
  !if &seq #l1 "ERROR"
    set-variable .lint "%s -e \"options('encoding'='%s');library(lintr);lintr::lint('%s',linters = linters_with_defaults( indentation_linter = indentation_linter(indent = 4L) ))\""
    set-variable #l1 .lint
  !endif
  !if &bmod "edit"
    set-variable #l2 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
    !if &iseq #l2 "y" 
      save-buffer 
    !endif
  !endif 
  2 pipe-shell-command &spr .lint %rscript-com #l0 $buffer-fname "*lintr*"
  !if &equ $result 1
    ml-write "Error: It seems that either R or the R package lintr is not installed!"
  !else
    set-variable .buffer $buffer-bname
    next-window-find-buffer "*lintr*"
    buffer-init "r-lint"
    set-variable :mouse-word-select r-lint-find-line
    buffer-bind-create "bio" "return" "0" r-lint-find-line
  !endif
!emacro


0 define-macro r-lint-find-line
  set-variable #l0 @wl
  !if &xse #l0 "\\(.+\\):\\([0-9]+\\):\\([0-9]+\\):.+"
    next-window-find-buffer .r-lint.buffer
    goto-line @s2
    beginning-of-line
    @s3 forward-char
  !else
    ml-write "Not a error line!"
  !endif
!emacro

define-macro fhook-r-lint
  buffer-init-hooks
!emacro
set-variable .fhook-r-lint.name "R Lint"
set-variable .fhook-r-lint.setup &reg "/history/fhook/r-lint" "acfhmw"
set-variable .fhook-r-lint.setup-mask "acfhmw"

!if &and &sin "h" .fhook-r-lint.setup &band .hilight.flags 0x02
  !iif &not &exi .hilight.r-lint  set-variable .hilight.r-lint &pinc  .hilight.next 1
  0 hilight .hilight.r-lint 2 200                                     $global-scheme
  ; windows
  hilight .hilight.r-lint   0  "[C-H]:[ /\\.A-Za-z0-9]+:[0-9]+:[0-9]+:"      .scheme.link  
  ; unix
  hilight .hilight.r-lint   0  "[ /\\.A-Za-z0-9]+:[0-9]+:[0-9]+:"      .scheme.link    
  hilight .hilight.r-lint   0 "style: .*"                         .scheme.operator
  hilight .hilight.r-lint   0 "warning: .*"                         .scheme.error
!endif

add-file-hook "*lintr*" fhook-r-lint

0 define-macro r-rscript
  !force set-variable #l0 %rscript-com
  !if &and &seq #l0 "ERROR" &not &seq $platform "windows"
    !if &not &seq &which "Rscript" ""
      set-variable %rscript-com "Rscript"
    !endif
  !else 
    set-variable $file-names "C:/Program Files/R/R-.*"
    !while &not &seq &set #l0 $file-names ""
      !if &xse #l0 "R-[3-9].[0-9].[0-9].+"
        set-variable %rscript-com &spr "\"C:/Program Files/R/%sbin/Rscript.exe\"" #l0
      !endif
    !done
  !endif
  !if &seq &which %rscript-com ""
    1000 ml-write &spr "Error: Executable '%s' is not in the path! Please install it!" %rscript-com
    !abort
  !else
    ml-write &spr "OK: Executable is '%s'!" %rscript-com
  !endif
!emacro

; execute a R file using Rscript executable directly from MicroEmacs using the current
; ISO or Windows encodings
define-macro r-exec
  !if &bmod "edit"
    set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
    !if &iseq #l0 "y" 
      save-buffer 
    !endif
  !endif 
  !if &not &seq $buffer-fhook "fhook-r"
      ml-write &spr "Error: '%s' is not an R file!" $buffer-bname
      !abort
  !endif
  !if &seq %rscript-com "ERROR"
    r-rscript
  !endif
  ; command line arguments
  set-variable #l1 ""
  !if @?
    set-variable #l1 @ml "Add command line arguments" 
  !endif
  set-variable #l0 &reg &spr "/history/%s/char-set" %platform ""
  set-variable #l0 &xre #l0 "iso" "ISO-" #l0
  set-variable #l0 &xre #l0 "cp" "CP" #l0    
  set-variable #l0 &xre #l0 "microsoft-" "" #l0        
  0 pipe-shell-command &spr "%s  --encoding=%s \"%s\" %s" %rscript-com #l0 $buffer-fname #l1 "*command*"
  find-buffer "*command*"
  ;buffer-is-utf8 #l1
  ;!if #l1  
  ;  -1 buffer-mode "view"
  ;  4 change-buffer-charset "utf8" "display"
  ;  -1 buffer-mode "view"
  ;!endif
!emacro

define-macro fhook-rdoc
    @# buffer-init "rdoc"
    !if &seq $buffer-bname "*rdoc*"
        ; Hyperlink with the <RETURN> key
        buffer-bind-create "bio" "return" "0" r-doc-process-link
        ; Move between links with the <TAB> key
        buffer-bind-create "bio" "tab"   "" r-doc-forward-link
        buffer-bind-create "bio" "S-tab" "" r-doc-backward-link
        buffer-bind-create "bio" "space" "" scroll-down
    !endif
    buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-rdoc.name "Rdoc"
set-variable .fhook-rdoc.setup &reg "/history/fhook/rdoc" "acfhmw"
set-variable .fhook-rdoc.setup-mask "acfhmw"
;set-variable .fhook-rdoc.comment "|%||%|% | %||"

!if &and &sin "h" .fhook-rdoc.setup &band .hilight.flags 0x02
  !iif &not &exi .hilight.rdoc  set-variable .hilight.rdoc &pinc .hilight.next 1
  0 hilight .hilight.rdoc 0                  .scheme.text
  !iif &not &exi ".hilight.r"  !force execute-file "hkr"
  hilight .hilight.rdoc  0xc0 "^cEUsage:cA" "Usage:" .hilight.r     .scheme.header
  hilight .hilight.rdoc  0xc0 "^cEExamples:cA" "Examples:" .hilight.r     .scheme.header  
  hilight .hilight.r     0xc0 "cE(.+)cA" "\\1"       .hilight.rdoc  .scheme.header
  hilight .hilight.r     0x44 "^cE" "" "cA" "" ""    .scheme.header  
  hilight .hilight.rdoc  0x44 "^cE" "" "cA" "" ""    .scheme.header
  hilight .hilight.rdoc  0x44  "ls" "" "le" "" ""    .scheme.link  
  ;hilight .hilight.rdoc  0x80 "^cEExamples:cB" .hilight.r     .scheme.header  
!endif

!if &sin "f" .fhook-rdoc.setup
  ; setup emf collapsing
  set-variable .fhook-rdoc.collapse-open  "^\ecE[A-Z]"
  set-variable .fhook-rdoc.collapse-close "^\ecE[A-Z]\\|\\'\\)"
  set-variable .fhook-rdoc.collapse-mnext "-1"
!endif
; setup item-list
set-variable .fhook-rdoc.item-list-s1 "^\ecE\\([A-Z].+\\)\ecA"
set-variable .fhook-rdoc.item-list-r1 "SECT \ecB\\1\ecA"

define-macro r-doc
  !force set-variable #l0 @1
  !if &not $status
    set-variable #l0 @ml00 "R help on"
  !endif
  !if &seq #l0 ""
      !return
  !endif
  set-variable #l0 &rep #l0 "::" ":"
  !if &xse #l0 "\\(.+\\):\\(.+\\)" 
      !if &or &seq @s1 "library" &seq @s1 "package"
          set-variable #l1 &spr "options(useFancyQuotes = FALSE);library(help='%s')" @s2
          set-variable .package @s2
      !else
          set-variable #l1 &spr "options(useFancyQuotes = FALSE);help('%s',package='%s',help_type='text')" @s2 @s1
          set-variable .package @s1
      !endif
  !else
      ; options(useFancyQuotes = FALSE);
      set-variable .package ""
      set-variable #l1 &spr "options(useFancyQuotes = FALSE);help('%s')" #l0
  !endif
  0 pipe-shell-command &spr "LANG=en_US Rscript -e \"%s\"" #l1 "*rdoc*"
  set-variable :mouse-word-select r-doc-process-link
  buffer-bind-create "bio" "return" "0" r-doc-process-link
  -1 buffer-mode "view"
  beginning-of-buffer
  ;set-variable $debug 2
  !force search-buffer "me" "During startup - Warning messages:"
  !if $status
      beginning-of-line
      1 kill-line
  !endif      
  !force search-buffer "me" "Setting LC_.+ failed"
  !while $status
      beginning-of-line
      1 kill-line
      !force search-buffer "me" "Setting LC_.+ failed"
  !done
  beginning-of-buffer
  3 kill-line
  replace-string "_" "" 
  beginning-of-buffer
  replace-string "^See Also:" "\ecESee Also:\ecA"
  beginning-of-buffer
  replace-string "^\\(\\u\\l[^ :]+:\\)$" "\ecE\\1\ecA"
  beginning-of-buffer
  replace-string "   \\(package:[^ ]+\\)   " "   \els\\1\ele   "
  beginning-of-buffer
  !force search-buffer "me" "^\\ecESee Also:"
  !if $status
      2 forward-line
      ;set-variable $debug 2
      beginning-of-line
      set-variable #l1 0
      ; maximal 5 lines as &xse has problems with while
      !while &less #l1 6
          ; &xse @wl "^\\S" does not work ...
          -1 replace-string "'\\([^']+\\)'" "\els\\1\ele"
          forward-line
          beginning-of-line
          set-variable #l1 &add #l1 1
      !done
  !endif
  beginning-of-buffer
  ;; package documentation with Index:
  !force search-buffer "me" "^\\ecEIndex:"
  !if $status
      2 forward-line
      beginning-of-line
      set-variable #l1 0
      ; maximal 5 lines
      !while &less #l1 100
          ; &xse @wl "^\\S" does not work ...
          -1 replace-string "^\\([^\\s]+\\)" "\els\\1\ele"
          !force forward-line
          !if $status
              beginning-of-line
          !endif
          set-variable #l1 &add #l1 1
      !done
      beginning-of-buffer      
  !endif
  ;execute-file "hkrdoc"
  beginning-of-buffer
  1 buffer-mode "view"
  !if &band $system 0x01
    ; some terminals might need this
    screen-update
  !endif

!emacro    
0 define-macro r-doc-test 
    0 pipe-shell-command &spr "LANG=en_US Rscript -e \"%s\"" @1 "*tmp*"
    find-buffer "*tmp*"
    !force search-forward "No documentation for"
    !if $status
        set-variable .rdoc.docu &spr "No documentation for %s" @1
        delete-buffer "*tmp*"
        !return
    !endif
    !force search-forward "there is no package called"
    !if $status
        set-variable .rdoc.docu &spr "Not such a package %s" @1
        delete-buffer "*tmp*"
        !return
    !endif
    set-variable .rdoc.docu "OK"
    delete-buffer "*tmp*"
!emacro
0 define-macro r-doc-process-link
  ;set-variable $debug 3
  set-position "\x80"
  set-variable #l0 $window-col
  set-variable #l1 $window-line
  ;set-variable $debug 2
  !force -2 search-forward "\ele"
  !if $status
      set-variable #l2 $window-col
      set-variable #l3 $window-line
      3 backward-char
      !force -2 search-backward "\els"
      !if $status
          set-variable #l4 $window-col
          set-variable #l5 $window-line
          3 forward-char
          ; all on same line? and 
          !if &and &equ #l1 #l3 &equ #l3 #l5
              !if &and &less #l0 #l2 &great #l0 #l4
                  set-mark
                  search-forward "\ele"
                  3 backward-char
                  copy-region
                  set-variable #l6 @y
                  -1 yank
                  ;3000 ml-write &spr "fetching %s" #l6
                  !if &seq .r-doc.package ""
                      r-doc #l6
                  !else
                      !if &equ &sin "package:" #l6 0
                          r-doc &spr "%s::%s" .r-doc.package #l6
                      !else
                          ; click on package:pkgname
                          r-doc #l6
                      !endif
                  !endif
              !endif
          !endif
      !endif
  !endif
!emacro
; Advance to the next link in the forward direction
0 define-macro r-doc-forward-link
    !if &les @# 0
        set-variable #l0 &sub 0 @#
        #l0 r-doc-backward-link
    !endif
    !force @# search-forward "\els"
    !if &not $status
        ; Not found, force wrap, search and finish
        beginning-of-buffer
        search-forward "\els"
    !endif
!emacro

; Advance to the next link in the backward direction
0 define-macro r-doc-backward-link
    !if &les @# 0
        set-variable #l0 &sub 0 @#
        #l0 r-doc-forward-link
    !endif
    ; move back 3 chars so if we are currently on a link we do move
    !force 3 backward-char
    !force @# search-backward "\els"
    !if &not $status
        ; Not found, force wrap, search and finish
        end-of-buffer
        search-backward "\els"
    !endif
    ; move to the end of the \elm so the user can sensibly move forward
    ; and so that subsequent forw/back-link moves work as expected.
    2 show-region
!emacro
