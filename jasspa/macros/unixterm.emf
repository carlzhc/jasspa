; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1995-2009 JASSPA (www.jasspa.com)
; Copyright (C) 2021-2023 Detlef Groth (https://github.com/mittelmark/microemacs)
; See the file me.emf for copying and conditions.
;
; Synopsis:    Common unix setup file
; Authors:     Steven Phillips, Detlef Groth
;
define-macro-file hkman man
define-macro-file hkipipe ishell gdb dbx perldb
add-file-hook ".C" fhook-cpp
0 define-macro exec-me
    ipipe-shell-command &spr "\"%s\" %s" $progname @1 @mna
!emacro

; TODO check on more platforms
; found it on MacOS Quartz, Ubuntu 18, Fedora 30, Fedora 38
set-variable .change-font.sz-size 17
set-variable .change-font.sz-fonts "|courier|lucidatypewriter|"
set-variable .change-font.sz-font "-*-courier-bold-r-*-*-%d-*-*-*-*-*-*-*"
;set-variable .change-font.sz-fonts "|courier-medium|courier-bold|lucidatypewriter-medium|lucidatypewriter-bold|"
!if &band $system 0x01
    ; Not using X
    !if &not &band $system 0x02
        ; no color - change the window chars so osd is more usable
        set-variable $window-chars &spr "%s=x*[>]<%s" &lef $window-chars 47 &rig $window-chars 54
    !endif
    ; suspend only on Terminal without questioning
    global-unbind-key "C-z"
    0 global-bind-key suspend-emacs "C-z"
!else
    ; TODO: fix if the font was deleted!
    ; try xset fp default
    !if &not &seq &set #l0 &reg &spr "/history/%s/font" $platform "" ""
        ; ignore errors with font in registry
        ; should fallback to default font
        ; seems to work
        !force !force change-font #l0
    !endif
    ; might be called like this:
    define-macro change-font-size
        set-variable #l0 1
        set-variable .new-size .change-font.sz-size
        set-variable .old-size .change-font.sz-size
        1000 ml-write .change-font.sz-size
        ; TODO: alter variable sz-size at the end only if success
        !if &equal @# 0
            set-variable .change-font.sz-size &add .change-font.sz-size -1
        !elif &equal @# -1
            set-variable #l0 -1 
        !endif
        set-variable #l2 0
        !while &less #l2 10
            ; maximal eight size steps
            set-variable #l2 &add #l2 1
            set-variable .change-font.sz-size &add .change-font.sz-size #l0
            set-variable #l1 &spr .change-font.sz-font .change-font.sz-size
            100 ml-write &cat "try font: " #l1
            !force change-font #l1
            !if $status
                100 ml-write &cat "current font: " #l1
                set-registry &spr "/history/%s/font" $platform #l1
                set-variable .new-size .change-font.sz-size
                set-variable #l2 10
            !elif &gre .change-font.sz-size 36
                set-variable #l2 10 ; break
            !elif &less .change-font.sz-size 8
                set-variable #l2 10 ; break
            !endif
        !done
        !if &equal .new-size .old-size
            ml-write "Font was not changed"
            set-variable .change-font.sz-size .old-size
        !endif
    !emacro
    define-macro change-font-type
        ;2000 ml-write &cat "font-type: " .change-font.type
        !force set-variable .font @1
        !if &not $status
            set-variable .font @ml19 "Select font (for new fonts spaces as underlines): " &lget .change-font.sz-fonts 1 .change-font.sz-fonts
            set-variable .font &rep .font "_" " "
            ml-write .font
        !endif
        !force set-variable .size @3
        !if &not $status
            !force set-variable .size @2
        !endif
        !if &not $status
            !force set-variable .size .change-font.sz-size
        !endif
        !if &not $status
            !force set-variable .size 17
        !endif
        !if &sin "bold" .change-font.sz-font
            set-variable .fontname &cat .font "-bold"
        !else
            set-variable .fontname &cat .font "-medium"
        !endif
        set-variable #l0 &spr "-*-%s-r-*-*-%d-*-*-*-*-*-*-*" .fontname .size
        !force change-font #l0
        !if $status
            set-variable .change-font.sz-font &spr "-*-%s-r-*-*-%%d-*-*-*-*-*-*-*" .fontname
            set-variable .change-font.sz-size .size
            !if &not &lfind .change-font.sz-fonts .font
                set-variable .change-font.sz-fonts &linsert .change-font.sz-fonts -1 .font
            !endif
            200 ml-write &cat "current font: " #l0
        !else
            200 ml-write &spr "font is not available: %s" #l0
        !endif
    !emacro
    define-macro change-font-xfontsel
        2 pipe-shell-command "xfontsel -print" "*xfontsel*"
        !if $result
            1000 ml-write "Error: xfontsel could not be exectuted!"
            !abort
        !endif
        set-position "\x90"
        find-buffer "*xfontsel*"
        beginning-of-buffer
        search-buffer "me" "^-"
        !if $status
            set-variable  .xfontsel.font @wl
            ; -*-anonymous pro minus-bold-r-*-*-17-*-*-*-*-*-*-*
            !if &xse .xfontsel.font "\\(-[^-]*-[^-]*-[^-]*-[^-]*-\\)[^-]*-[^-]*-\\([^-]*\\)-[^-]*-[^-]*\\(-[^-]*-\\)[^-]*\\(-.*\\)"
                set-variable .change-font.sz-font &spr "%s*-*-%%d-*-*%s*%s" @s1 @s3 @s4
                !if &seq @s2 "*"
                    !if &not &exi .change-font.sz-size
                        set-variable .change-font.sz-size 17
                    !endif
                !else
                    set-variable .change-font.sz-size @s2
                !endif
                !force change-font &spr .change-font.sz-font  .change-font.sz-size
                !if &not $status
                    ; failed try other sizes 14, 18 or 24 for bitmap fonts!
                    set-variable #l1 &sub .change-font.sz-size 3
                    set-variable #l2 &add .change-font.sz-size 4
                    !repeat
                        !force change-font &spr .change-font.sz-font #l1
                        !if $status
                            set-variable .change-font.sz-size #l1
                        !endif
                        set-variable #l1 &add #l1 1
                    !until &less #l1 #l2
                !endif
                !if $status
                    1000 ml-write &cat "font: " &spr .change-font.sz-font  .change-font.sz-size
                !else
                    1000 ml-write &cat "font not found: " &spr .change-font.sz-font  .change-font.sz-size
                !endif
            !else
                ; should be not reached
                change-font .xfontself.font
                set-variable .change-font.sz-font ""
            !endif
        !else
            1000 ml-write "Error: Failed to find font name - did you click on Selt and Quit?"
        !endif
        delete-buffer "*xfontsel*"
        goto-position "\x90"
    !emacro
    define-macro change-font-courier
        ; check if current font is medium
        !if &sin "medium" .change-font.sz-font
            set-variable #l2 1
        !endif
        set-variable .change-font.sz-font "-*-courier-bold-r-*-*-%d-*-*-*-*-iso8859-*"
        !if #l2
            set-variable #l0 &rep .change-font.sz-font "bold" "medium"
        !endif
        0 change-font-size #l0
    !emacro
    define-macro change-font-lucida
        ; check if current font is medium
        !if &sin "medium" .change-font.sz-font
            set-variable #l2 1
        !endif
        set-variable .change-font.sz-font "-*-lucidatypewriter-bold-r-*-*-%d-*-*-*-*-iso8859-*"
        !if #l2
            set-variable #l0 &rep .change-font.sz-font "bold" "medium"
        !endif
        0 change-font-size #l0
    !emacro
    define-macro change-font-bold
        !if &sin "medium" .change-font.sz-font
            set-variable .change-font.sz-font &rep .change-font.sz-font "medium" "bold"
        !else
            set-variable .change-font.sz-font &rep .change-font.sz-font "bold" "medium"
        !endif
        0 change-font-size
        200 ml-write &spr "Current font %s" &spr .change-font.sz-font .change-font.size
    !emacro
    1 global-bind-key change-font-size "C-+"
    0 global-bind-key change-font-size "C-="
    -1 global-bind-key change-font-size "C--"
!endif
;
; setup the next-error stuff including grep and compiling
;
set-variable $line-template "[0-9]+"
set-variable $file-template "[!-9;-z~]+"
set-variable %ipipe-term "TERM=vt100-nam"
; Grep stuff
set-variable %xgrep-com "grep -n"
; RCS stuff
set-variable $rcs-file     "RCS/%f,v"
set-variable $rcs-co-com   "co %f"
set-variable $rcs-cou-com  "co -l %f"
set-variable $rcs-ci-com   "ci -u -m\"%m\" %f"
;set-variable $rcs-cif-com  "ci -u -m\"%m\" %f"
; Declare the .dir file found in X11 font directory, this is not an info file.
add-file-hook ".dir"                                          fhook-txt
