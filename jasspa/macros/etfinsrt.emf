; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1997-2009 JASSPA (www.jasspa.com)
;               2023  Detlef Groth
; See the file me.emf for copying and conditions.
;
; Created:     Mon Dec 15 1997
; Synopsis:    Finds, inserts & edits the magic variables in a template file.
; Authors:     Jon Green, Steven Phillips & Detlef Groth
;
; Usage:
;      etfinsrt "<etf-name>"
;      n insert-templete "<template-name>"
;      insert-template 
;
; The <etf-name> is typically the fhook label, i.e. emf or c etc, the template
; file <etf-name>.etf is found and inserted. insert-template uses the $buffer-fhook
; name. etfinsrt always inserts the first template in the etf file, whereas
; insert-template inserts the n'th template or prompts the user if n is not given.
; 
; New since 2023:
; Calling `insert-template` without numerical argument selects etf files from the users
; config folder via an interactive menu. So files author.etf, md/report.etf, md/pres.etf
; in ~/.jasspa would allow the user to choose one of these three templates from the command
; line in an interactive manner.
; Installation of new templates can be done by copying the files into the ~/.jasspa folder
; or in subfolders belonging to the fhook, so latex template etf files go in ~/.jasspa/latex, 
; Python files go into ~/.jasspa/python etc

0 define-macro etfinsrt-i
    ; Insert the template file
    set-variable #l8 $window-line
    !force insert-file &find @1 ".etf"
    !if &not $status
        ; Warn and return if the template file was not located.
        ml-write &spr "[Could not find template file %s.etf]" @1
        !return
    !endif
    set-variable #l7 &sub #l8 $window-line
    ; Remember current magic mode then add it if not set
    set-variable #l0 &bmod magic
    1 buffer-mode "magic"
    ; handle a template file containing multiple templates
    set-variable $window-line #l8
    !if &xseq @wl "\\$TEMPLATES\\(\\$.+\\$\\)"
        set-variable #l1 @s1
        !if @?
            !if &seq &set #l2 &lget #l1 @# ""
                set-variable #l2 &lget #l1 1
            !endif
        !else
            !if &seq &set #l2 &ind &spr ".fhook-%s.template" &rig $buffer-fhook 6 "ERROR"
                set-variable #l2 &lget #l1 1
            !endif
            !force !force set-variable #l2 @ml19 "Use Template:" #l2 #l1
            !if &not $status
                set-variable #l2 &lget #l1 1
            !elif &not &lfind #l1 #l2
                set-variable #l2 &lget #l1 1
            !else
                set-variable &ind &spr ".fhook-%s.template" &rig $buffer-fhook 6 #l2
            !endif
        !endif
        set-mark
        forward-line
        -1 kill-region
        set-variable #l7 &add #l7 1
        !force #l7 search-forward "^\\$TEMPLATE_START\\$\\(.*\\)\\$"
        !while $status
            set-variable #l1 &seq @s1 #l2
            beginning-of-line
            set-mark
            forward-line
            -1 kill-region
            set-variable #l7 &add #l7 1
            !force #l7 search-forward "^\\$TEMPLATE_END\\$\\(.*\\)\\$"
            !if &not $status
                ml-write "[Error - missing $TEMPLATE_END$]"
                !abort
            !endif
            beginning-of-line
            !if #l1
                set-mark
            !endif
            forward-line
            set-variable #l7 &add #l7 $window-line
            -1 kill-region
            set-variable #l7 &sub #l7 $window-line
            !force #l7 search-forward "^\\$TEMPLATE_START\\$\\(.*\\)\\$"
        !done
    !endif
    ; Change the user name $USER_NAME$.
    set-variable #l1 &reg "/history/user-name" "<unknown>"
    set-variable $window-line #l8
    !force #l7 replace-string "\\$USER_NAME\\$" #l1
    ; Change to the company name $COMPANY_NAME$.
    !if &not &seq %company-name "ERROR"
        set-variable #l1 %company-name
    !endif
    set-variable $window-line #l8
    !force #l7 replace-string "\\$COMPANY_NAME\\$" #l1
    ; Change the year $YEAR$
    set-variable $window-line #l8
    !force #l7 replace-string "\\$YEAR\\$" &lef $time 4
    ; Change the create date $ASCII_TIME$. - Get ascii time in #l9
    ascii-time
    set-variable $window-line #l8
    !force #l7 replace-string "\\$ASCII_TIME\\$" #l9
    ; Change the file name variables, use the $buffer-bname, must remove the trailing <#> if present.
    set-variable #l1 &xrep $buffer-bname "<[0-9]+>$" ""
    set-variable $window-line #l8
    !force #l7 replace-string "\\$FILE_NAME\\$" #l1
    set-variable #l2 &xrep #l1 "\\.[^.]*$" ""
    set-variable $window-line #l8
    !force #l7 replace-string "\\$FILE_BASENAME\\$" #l2
    ; For C header files a define with the file name in upper-case and '.'s -> '_'
    ; is used to stop double inclusion
    set-variable #l2 &sup &rep #l1 "." "_"
    set-variable $window-line #l8
    !force #l7 replace-string "\\$FILE_NAME_UD\\$" #l2
    ; And for backward compatibility
    set-variable $window-line #l8
    !force #l7 replace-string "\\$BUFFER_NAME\\$" #l2
    ; set the cursor position
    set-variable $window-line #l8
    !force #l7 search-forward "\\$CURSOR\\$" ""
    !if $status
        set-mark
        8 backward-char
        -1 kill-region
    !else
        set-variable $window-line &sub #l8 #l7
    !endif
    ; Reset magic mode if we added it, flag buffer as unedited and goto end
    &cond #l0 1 -1 buffer-mode "magic"
    -1 buffer-mode "edit"
!emacro

0 define-macro etfinsrt
    1 etfinsrt-i @1
!emacro

define-macro insert-template
    !if @?
        @# etfinsrt-i &rig $buffer-fhook 6
    !else
        etf-get-files
        !force set-variable #l0 .templates
        !if &not &seq #l0 "ERROR"
            set-variable #l0 @ml19 "Template name (press tab to see all): " &lget .templates 1 .templates
            etfinsrt #l0
        !else
            etfinsrt-i &rig $buffer-fhook 6
        !endif
    !endif
!emacro

0 define-macro etf-get-files
    set-variable $file-names &cat $user-path ".*.etf"
    set-variable .insert-template.templates "|"
    !while &not &seq &set #l0 $file-names ""
        set-variable .insert-template.templates &cat &cat .insert-template.templates #l0 "|"
    !done
    set-variable #l0 &rep $buffer-fhook "fhook-" ""
    set-variable #l1  &cat &cat &cat $user-path #l0 "/" ".*.etf"
    set-variable $file-names #l1
    !while &not &seq &set #l2 $file-names ""
        set-variable .insert-template.templates &cat &cat &cat &cat .insert-template.templates #l0 "/" #l2 "|"
    !done
    set-variable .insert-template.templates &rep .insert-template.templates ".etf" ""
!emacro
