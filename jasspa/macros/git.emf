; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 2001-2024 JASSPA (www.jasspa.com)
;               2021-2024 D.Groth (github.com/mittelmark/microemacs)
;
; See the file me.emf for copying and conditions.
;
; Created:     Tue Aug 13 2024
; Synopsis:    Basic Git Command support macros for MicroEmacs
; Authors:     Detlef Groth
;

; add a file to git

; just a place to store some variables
0 define-macro git
    ;set-variable .lang "LANG=en_US"
!emacro    
set-variable .git.lang "LANG=en_US"
; the actual functions alphabetically ordered
; more complicated things like git clone, git branch,  git mv, git pull, git push etc
; should be done from the terminal
define-macro git-lang
    ; changing the language does break the functions below
    ; so it might be better to hide this function?
    set-variable .git.lang &cat "LANG=" @1
    !if &band $system 0x01
        screen-update
    !endif
!emacro
define-macro git-add
    !if &bmod "edit"
        set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l0 "y" 
            save-buffer 
        !endif
    !endif 
    0 pipe-shell-command &cat .git.lang &cat " git add " $buffer-fname "*git*"
    !if &band $system 0x01
        screen-update
    !endif
!emacro

; commit changes of the file to git repo
define-macro git-commit
    !if &bmod "edit"
        set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l0 "y" 
            save-buffer 
        !endif
    !endif 
    set-position "\x90"
    git-get-status
    !if &or &seq .git.status "modified" &seq .git.status "new file"
        set-variable #l0 @ml08 "Enter your commit message"
        2 pipe-shell-command &cat .git.lang &cat &cat &cat " git commit -m '" #l0 "' " $buffer-fname "*git*"
        find-buffer "*git*"
        beginning-of-buffer
        search-buffer "me" "^ 1 file changed"
        !if $status
            set-variable  #l0 &trb @wl
            delete-buffer "*git*"
            goto-position "\x90"
            1000 ml-write #l0
        !else
            delete-buffer "*git*"
            goto-position "\x90"
            1000 ml-write "Error!"
        !endif
        !if &band $system 0x01
            screen-update
        !endif
    !elif &seq .git.status "untracked"
        1000 ml-write "File is not added to Git repositoriy, add first!"
    !elif &seq .git.status "nothing to commit"
        1000 ml-write "File is commited already, nothing to commit!"
    !else
        1000 ml-write "Error: Unknown problem!"
    !endif
!emacro
add-file-hook "*git-grep*" fhook-grep
define-macro git-diff
    !if &bmod "edit"
        set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l0 "y"
            save-buffer
        !endif
    !endif
    0 pipe-shell-command &cat .git.lang &cat  " git diff "  $buffer-fname "*git*"
    !if &band $system 0x01
        screen-update
    !endif
!emacro    
define-macro git-grep
    !if &bmod "edit"
        set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l0 "y"
            save-buffer
        !endif
    !endif
    set-variable #l0 @ml08 "git-grep with: "
    0 pipe-shell-command &cat .git.lang &cat &cat " git grep -nE '"  #l0 "'" "*git-grep*"
!emacro

define-macro git-log
    0 pipe-shell-command &cat .git.lang &cat  " git log "  $buffer-fname "*git*"
    !if &band $system 0x01
        screen-update
    !endif
!emacro    

;set-variable $debug 0
0 define-macro git-get-status
    !if &bmod "edit"
        set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l0 "y" 
            save-buffer 
        !endif
    !endif 
    set-position "\x90"
    2 pipe-shell-command &cat .git.lang  &cat  " git status "  $buffer-fname "*git*"
    find-buffer "*git*"
    beginning-of-buffer
    search-buffer "me" "^\\(\tmodified:\\|nothing to commit\\|Untracked files\\|\tnew file:\\)"
    ;set-variable $debug 2
    !if $status
        set-variable  #l0 &trb @wl
        delete-buffer "*git*"
        !if &sin "nothing to commit" #l0
            set-variable .git.status "nothing to commit"
        !elif &sin "modified" #l0
            set-variable .git.status "modified"
        !elif &sin "new file" #l0
            set-variable .git.status "new file"
        !else
            set-variable .git.status "untracked"
        !endif
    !else
        set-variable .git.status "unknown"
    !endif
    goto-position "\x90"
!emacro    

define-macro git-pull
    0 pipe-shell-command &cat .git.lang " git pull" "*git*"
    !if &band $system 0x01
        screen-update
    !endif
!emacro    

define-macro git-status
    !if &bmod "edit"
        set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
        !if &iseq #l0 "y" 
            save-buffer 
        !endif
    !endif 
    git-get-status
    1000 ml-write .git.status
    !if &band $system 0x01
        screen-update
    !endif

!emacro    

define-macro git-state
    0 pipe-shell-command &cat .git.lang " git status ." "*git*"
    !if &band $system 0x01
        screen-update
    !endif
!emacro    
