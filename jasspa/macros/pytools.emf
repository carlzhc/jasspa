;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
;  Created By    : Detlef Groth, University of Potsdam
;  Author        : Detlef Groth, University of Potsdam
;  Created       : Wed Sep 25 15:42:35 2024
;  Last Modified : <241226.0942>
;
;  Description   : Documentation viewer within MicroEmacs for
;                  Python  
;  Notes
;
;  History       : 2024-09-25 initial version
;
;  Copyright (c) 2024 Detlef Groth.
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; -!- emf -!-
; This is part of the JASSPA MicroEmacs macro files
; Copyright (C) 1999-2024 JASSPA (www.jasspa.com)
; See the file me.emf for copying and conditions.
;


define-macro fhook-py-doc
  @# buffer-init "py-doc"
  buffer-init-hooks
!emacro

; buffer-init variables
set-variable .fhook-py-doc.name "py-doc"
set-variable .fhook-py-doc.setup &reg "/history/fhook/py-doc" "acfhmw"
set-variable .fhook-py-doc.setup-mask "acfhmw"

!if &and &sin "h" .fhook-py-doc.setup &band .hilight.flags 0x02
  !iif &not &exi .hilight.py-doc  set-variable   .hilight.py-doc &pinc .hilight.next 1
  0 hilight .hilight.py-doc 0                    .scheme.text
  hilight .hilight.py-doc  2    "^[A-Z].+"       .scheme.header
  hilight .hilight.py-doc  2    "^    class"     .scheme.keyword
!endif

!if &sin "f" .fhook-py-doc.setup
  ; setup emf collapsing
  set-variable .fhook-py-doc.collapse-open  "^\\([A-Z]\\|    class\\)"
  set-variable .fhook-py-doc.collapse-close "^\\([A-Z]\\|    class\\|\\'\\)"
  set-variable .fhook-py-doc.collapse-mnext "-1"
!endif
; setup item-list
set-variable .fhook-py-doc.item-list-s1 "^\\([A-Z][A-Z]\.+\\)"
set-variable .fhook-py-doc.item-list-r1 "SECT \ecB\\1\ecA"
set-variable .fhook-py-doc.item-list-s2 "^    class +\\([^(]+\\)"
set-variable .fhook-py-doc.item-list-r2 "  class \ecB\\1\ecA"

define-macro py-doc
  !force set-variable #l0 @1
  !if &not $status
    set-variable #l0 @ml00 "Python help on"
  !endif
  0 pipe-shell-command &spr "LANG=en_US pydoc %s" #l0 "*py-doc*"
  -1 buffer-mode "view"
  beginning-of-buffer
  3 kill-line
  beginning-of-buffer
  1 buffer-mode "view"

  !if &band $system 0x01
    ; some terminals might need this
    screen-update
  !endif
!emacro    

add-file-hook "*py-doc*" fhook-py-doc
buffer-init-fhook "py-doc"

define-macro py-format
  !if &bmod "edit"
    set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
    !if &iseq #l0 "y" 
      save-buffer 
    !endif
  !endif 
  !if &not &seq $buffer-fhook "fhook-python"
      ml-write &spr "Error: '%s' is not a Python file!" $buffer-bname
      !abort
  !endif
  !force set-variable #l1 .format
  !if &seq #l1 "ERROR"
    !if &and &seq &which "yapf" "" &seq &which "black" ""
      ml-write "Error: You must have either the black or the yapf formatter installed!"
      !abort
    !endif  
    !if &and &seq #l1 "ERROR" &not &seq &which "yapf" ""
      set-variable .format "yapf -i"
    !else 
      set-variable .format "black -q"
    !endif
    set-variable #l1 .format
  !endif
  2 pipe-shell-command &spr "%s %s" #l1 $buffer-fname "*command*"
  !if &equ $result 1
    ml-write "Error: It seems that python linters yapf or black are not installed!"
  !else
    0 reread-file
  !endif
!emacro

define-macro fhook-py-lint
  buffer-init-hooks
!emacro

define-macro py-lint
  !if &bmod "edit"
    set-variable #l2 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
    !if &iseq #l2 "y" 
      save-buffer 
    !endif
  !endif 
  !if &not &seq $buffer-fhook "fhook-python"
      ml-write &spr "Error: '%s' is not a Python file!" $buffer-bname
      !abort
  !endif
  !force set-variable #l0 .lint
  !if &seq #l0 "ERROR"
    set-variable #l0 "pylint %s"
    set-variable .lint #l0
  !endif
  2 pipe-shell-command &spr #l0 $buffer-fname "*pylint*"
  !if &equ $result 1
    ml-write "Error: It seems that Python package pylint is not installed!"
  !else
    set-variable .buffer $buffer-bname
    next-window-find-buffer "*pylint*"
    buffer-init "py-lint"
    set-variable :mouse-word-select py-lint-find-line
    buffer-bind-create "bio" "return" "0" py-lint-find-line
  !endif
!emacro

0 define-macro py-lint-find-line
  set-variable #l0 @wl
  !if &xse #l0 "\\(.+\\):\\([0-9]+\\):\\([0-9]+\\):.+"
    next-window-find-buffer .py-lint.buffer
    goto-line @s2
    beginning-of-line
    @s3 forward-char
  !else
    ml-write "Not a error line!"
  !endif
!emacro

set-variable .fhook-py-lint.name "Python Lint"
set-variable .fhook-py-lint.setup &reg "/history/fhook/py-lint" "acfhmw"
set-variable .fhook-py-lint.setup-mask "acfhmw"

!if &and &sin "h" .fhook-py-lint.setup &band .hilight.flags 0x02
  !iif &not &exi .hilight.py-lint  set-variable .hilight.py-lint &pinc  .hilight.next 1
  0 hilight .hilight.py-lint 2 200                                     $global-scheme
  hilight .hilight.py-lint   0  "[/\\.A-Za-z0-9]+:[0-9]+:[0-9]+:"      .scheme.link  
!endif

add-file-hook "*pylint*" fhook-py-lint

; execute a Python file directly from MicroEmacs 
define-macro fhook-py-exec
  buffer-init-hooks
!emacro

define-macro py-exec
  !if &bmod "edit"
    set-variable #l0 @mc5 "Save buffer first (?/y/n) ? " "nNyY" "(Y)es, (N)o, (C-g)Abort ? "
    !if &iseq #l0 "y" 
      save-buffer 
    !endif
  !endif 
  !if &not &seq $buffer-fhook "fhook-python"
      ml-write &spr "Error: '%s' is not a Python file!" $buffer-bname
      !abort
  !endif
  ; command line arguments
  set-variable #l1 ""
  !if @?
    set-variable #l1 @ml "Add command line arguments" 
  !endif
  2 pipe-shell-command &spr "python3 %s %s" $buffer-fname #l1 "*pyexec*"
  set-variable .buffer $buffer-bname
  next-window-find-buffer "*pyexec*"
  buffer-init "py-exec"
  set-variable :mouse-word-select py-exec-find-line
  buffer-bind-create "bio" "return" "0" py-exec-find-line

!emacro

0 define-macro py-exec-find-line
  set-variable #l0 @wl
  !if &xse #l0 ".+line \\([0-9]+\\),.+"
    next-window-find-buffer .py-exec.buffer
    goto-line @s1
  !else
    ml-write "Not a error line!"
  !endif
!emacro

set-variable .fhook-py-exec.name "Python Exec"
set-variable .fhook-py-exec.setup &reg "/history/fhook/py-exec" "acfhmw"
set-variable .fhook-py-exec.setup-mask "acfhmw"

!if &and &sin "h" .fhook-py-exec.setup &band .hilight.flags 0x02
  !iif &not &exi .hilight.py-exec  set-variable .hilight.py-exec &pinc  .hilight.next 1
  0 hilight .hilight.py-exec 2 200                                     $global-scheme
  hilight .hilight.py-exec   0  "  File.*"      .scheme.link  
!endif

add-file-hook "*pyexec*" fhook-py-exec
