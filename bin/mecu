#!/usr/bin/env bash
## file: mecu 
## Description: wrapper to run MicroEmacs with extended character settings
##              on UTF-8 enabled terminals
##  
## Tools required:
##   abduco: session management and detacher
##           https://www.brain-dump.org/projects/abduco/   
##   luit:   filter between non-utf-8 applications and utf-8 terminals
##           https://invisible-island.net/luit/
## Installation:
##           fedora: sudo dnf install abduco luit  
##           debian: sudo apt install abduco luit

## check for none interactive arguments like:
## help, version, message, pipe

new_args=()
encoding=ISO-8859-15
themes=("artur" "dracula" "espresso" "iterm")
## add your own themes from here:
## https://github.com/mbadolato/iTerm2-Color-Schemes/tree/master/dynamic-colors
## if you like to take a theme crete a function theme-NAME for it and place
## the shell script code into that function
function theme-espresso {
    printf "\033]4;0;#353535;1;#d25252;2;#a5c261;3;#ffc66d;4;#6c99bb;5;#d197d9;6;#bed6ff;7;#eeeeec;8;#535353;9;#f00c0c;10;#c2e075;11;#e1e48b;12;#8ab7d9;13;#efb5f7;14;#dcf4ff;15;#ffffff\007"
    printf "\033]10;#ffffff;#323232;#d6d6d6\007"
    printf "\033]17;#5b5b5b\007"
    printf "\033]19;#ffffff\007"
    printf "\033]5;0;#ffffff\007"
}
function theme-iterm {
    printf "\033]4;0;#000000;1;#c91b00;2;#00c200;3;#c7c400;4;#2225c4;5;#ca30c7;6;#00c5c7;7;#ffffff;8;#686868;9;#ff6e67;10;#5ffa68;11;#fffc67;12;#6871ff;13;#ff77ff;14;#60fdff;15;#ffffff\007"
    printf "\033]10;#ffffff;#000000;#e5e5e5\007"
    printf "\033]17;#c1deff\007"
    printf "\033]19;#000000\007"
    printf "\033]5;0;#ffffff\007"
}
function theme-artur {
    printf "\033]4;0;#3d352a;1;#cd5c5c;2;#86af80;3;#e8ae5b;4;#6495ed;5;#deb887;6;#b0c4de;7;#bbaa99;8;#554444;9;#cc5533;10;#88aa22;11;#ffa75d;12;#87ceeb;13;#996600;14;#b0c4de;15;#ddccbb\007"
    printf "\033]10;#ddeedd;#1c1c1c;#e2bbef\007"
    printf "\033]17;#4d4d4d\007"
    printf "\033]19;#ffffff\007"
    printf "\033]5;0;#ffffff\007"
}
function theme-dracula {
    printf "\033]4;0;#21222c;1;#ff5555;2;#50fa7b;3;#ffcb6b;4;#82aaff;5;#c792ea;6;#8be9fd;7;#f8f8f2;8;#545454;9;#ff6e6e;10;#69ff94;11;#ffcb6b;12;#d6acff;13;#ff92df;14;#a4ffff;15;#f8f8f2\007"
    printf "\033]10;#f8f8f2;#212121;#eceff4\007"
    printf "\033]17;#f8f8f2\007"
    printf "\033]19;#545454\007"
    printf "\033]5;0;#ffffff\007"
}
function inlist() {
    local search_string="$1"   # The string to search for
    shift                      # Shift the arguments to access the list
    local list=("$@")          # The remaining arguments are the list
    for item in "${list[@]}"; do
        if [[ "$item" == "$search_string" ]]; then
               return 0  # String found
        fi
    done
    return 1  # String not found
}
# Loop through all the provided arguments
for arg in "$@"; do
    # Check if the argument starts with --theme=
    if [[ "$arg" == --theme=* ]]; then
        # If it doesn't, add it to the new_args array
       theme="${@##*--theme=}"
       theme="${theme%% *}"
       if inlist "$theme" "${themes[@]}"; then
           echo "Theme: $theme is there"        
           theme-$theme
       else
           echo "Wrong theme $theme!"
           exit
       fi
    elif [[ "$arg" == --encoding=* ]]; then
       encoding="${@##*--encoding=}"
       encoding="${encoding%% *}"
       echo "Encoding: $encoding"
    elif [[ "$arg" == "-h" ]]; then
        mecb -h
        echo -e "   --encoding=ENCODING"
        echo -e "              like: ISO8859-15 (WEST-EUROPEAN)" 
        echo -e "                    ISO8859-5  (CYRILLIC)"
        echo -e "                    CP1252     (WEST-EUROPEAN)"
        echo -e "              use luit -list to see all available ones"
        echo -e "   --theme=THEME"
        echo -e "      where themes are: artur, dracula, espresso, iterm"
        exit
    else    
        new_args+=("$arg")
    fi
done
## overwrite main argument list with new args
set -- "${new_args[@]}"
if [ "$1" == "-h" -o "$1" == "-V" -o "$1" == "-m" -o "$1" == "-o" -o "$1" == "-p" -o "$1" == "-P" ] ;  then 
    mecb "$@"
else
    ## interactive ME session
    ## session creation for the current tty 
    tty=$(tty | grep -Eo '[0-9]+')
    res=$(abduco -l | grep mec$tty)
    ## (press in ME Ctrl-l to update screen)
    ## running session, if no create an new one
    ## otherwise attach to the old one

    if [ "$res" == "" ] ; then 
        ## a new one
       TERM=xterm abduco -A -e ^z mec$tty luit -encoding $encoding mecb "$@"
    else
        ## attach to an old one
        abduco -a -e ^z mec$tty 
    fi
fi
